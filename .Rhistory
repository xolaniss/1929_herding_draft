#   mutate(Mkt = `Mkt-RF` + RF)
# 2.2 CSAD and CSSD --------------------------------------------------------------------
results_all_industries_tbl <- cross_deviations_tbl(data = equal_returns_tbl)
equal_returns_tbl %>% market_return()
market_return_tbl <- equal_returns_tbl %>% market_return()
market_return_tbl %>%
as_tibble()
market_return_tbl %>%
as_tibble() %>%
ggplot(aes(y = value)) +
geom_line()
market_return_tbl %>%
as_tibble() %>%
ggplot(aes(y = value)) +
geom_hist()
market_return_tbl %>%
as_tibble() %>%
ggplot(aes(y = value)) +
geom_histogram()
market_return_tbl %>%
as_tibble() %>%
ggplot(aes(x = value)) +
geom_histogram()
equal_returns_tbl %>% skim()
csad(equal_returns_tbl, market_return = market_return_tbl)
# Description
# Calculation of CSAD using weighted returns by Xolani Sibande 20 October 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
# 0.0 Functions ---------------------------------------------------------------
source(here("Functions", "fx_plot.R"))
source(here("Functions", "cross_deviations_functions.R"))
# 1.0 Import -------------------------------------------------------------
returns <- read_rds(here("Outputs", "artifacts_returns_data.rds"))
equal_returns_tbl <- returns$full_data$equal_returns_tbl
fama_french <-  read_rds(here("Outputs", "artifacts_fama_french.rds"))
fama_french_tbl <- fama_french$data$fama_french_tbl
# 2.0 All industries ----------------------------------------------------------
# 2.1 Market return  ---------------------------------------------------------------
# fama_french_tbl <-
#   fama_french_tbl %>%
#   mutate(Mkt = `Mkt-RF` + RF)
# 2.2 CSAD and CSSD --------------------------------------------------------------------
results_all_industries_tbl <- cross_deviations_tbl(data = equal_returns_tbl)
# 2.3 Graphing ---------------------------------------------------------------
results_all_industries_gg <-
results_all_industries_tbl %>%
results_gg() +
labs(title = "All industries")
results_all_industries_gg
returns_consumables_group_tbl <-
returns$groups$Consumer_durables_nondurables_wholesale_retail_some_services_group_equal_tbl # including some NAs in some categories
returns_consumables_group_tbl
# 3.2 CSAD and CSSD -------------------------------------------------------
results_consumables_group_tbl <- cross_deviations_tbl(data = returns_consumables_group_tbl)
# 3.3 Graphing ------------------------------------------------------------
results_consumables_group_gg <-
results_consumables_group_tbl %>%
results_gg() +
labs(title = "Consumables group")
results_consumables_group_gg
results_consumables_group_tbl[1, ]
returns_consumables_group_tbl[1, ]
returns_consumables_group_tbl[1, ] - as.numeric(rowMeans(returns_consumables_group_tbl[1, ]))
returns_consumables_group_tbl[1, ] - as.numeric(rowMeans(returns_consumables_group_tbl[1, ], na.rm = TRUE))
returns_consumables_group_tbl[1, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1, -1], na.rm = TRUE))
as.numeric(rowMeans(returns_consumables_group_tbl[1, -1], na.rm = TRUE))
returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1], na.rm = TRUE))
as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1], na.rm = TRUE))
returns_consumables_group_tbl[1:2, -1]
abs(returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1],
na.rm = TRUE)))
rowSums(abs(returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1],
na.rm = TRUE))))
rowSums(abs(returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1],
na.rm = TRUE))), na.rm = TRUE)
returns_consumables_group_tbl
returns_consumables_group_tbl %>%
mutate(across(-Date, .fns = .x *100))
returns_consumables_group_tbl %>%
mutate(across(-Date, .fns = ~.x *100))
returns_consumables_group_tbl %>%
mutate(across(-Date, .fns = ~.x *100))
# 3.2 CSAD and CSSD -------------------------------------------------------
results_consumables_group_tbl <- cross_deviations_tbl(data = returns_consumables_group_tbl)
# 3.3 Graphing ------------------------------------------------------------
results_consumables_group_gg <-
results_consumables_group_tbl %>%
results_gg() +
labs(title = "Consumables group")
results_consumables_group_gg
rowSums(abs(returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1],
na.rm = TRUE))), na.rm = TRUE)
returns_consumables_group_tbl <-
returns$groups$Consumer_durables_nondurables_wholesale_retail_some_services_group_equal_tbl %>%  # including some NAs in some categories %>%
mutate(across(-Date, .fns = ~.x *100))
# 3.2 CSAD and CSSD -------------------------------------------------------
results_consumables_group_tbl <- cross_deviations_tbl(data = returns_consumables_group_tbl)
# 3.3 Graphing ------------------------------------------------------------
results_consumables_group_gg <-
results_consumables_group_tbl %>%
results_gg() +
labs(title = "Consumables group")
results_consumables_group_gg
rowSums(abs(returns_consumables_group_tbl[1:2, -1] - as.numeric(rowMeans(returns_consumables_group_tbl[1:2, -1],
na.rm = TRUE))), na.rm = TRUE)
source("~/Papers/1929_herding_draft/Scripts/02_CSAD_CSSD.R")
source("~/Papers/1929_herding_draft/Scripts/03_descriptives.R")
descriptives_tbl
returns
source("~/Papers/1929_herding_draft/Scripts/02_CSAD_CSSD.R")
source("~/Papers/1929_herding_draft/Scripts/03_descriptives.R")
descriptives_tbl
source("~/Papers/1929_herding_draft/Scripts/04_general_herding_analysis.R")
source("~/Papers/1929_herding_draft/Scripts/02_CSAD_CSSD.R")
source("~/Papers/1929_herding_draft/Scripts/03_descriptives.R")
source("~/Papers/1929_herding_draft/Scripts/04_general_herding_analysis.R")
# Description
# CSAD calculation based on ungrouped 49 industries - Xolani Sibande June 2023
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
library(quantmod)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
# Functions ---------------------------------------------------------------
source(here("Functions", "fx_plot.R"))
source(here("Functions", "cross_deviations_functions.R"))
# Import -------------------------------------------------------------
returns <- read_rds(here("Outputs", "artifacts_returns_data.rds"))
equal_returns_tbl <- returns$full_data$equal_returns_tbl
# Cleaning -----------------------------------------------------------------
equal_returns_tbl
results_all_industries_tbl
# Description
# Calculation of CSAD using weighted returns by Xolani Sibande 20 October 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
# 0.0 Functions ---------------------------------------------------------------
source(here("Functions", "fx_plot.R"))
source(here("Functions", "cross_deviations_functions.R"))
# 1.0 Import -------------------------------------------------------------
returns <- read_rds(here("Outputs", "artifacts_returns_data.rds"))
equal_returns_tbl <- returns$full_data$equal_returns_tbl
fama_french <-  read_rds(here("Outputs", "artifacts_fama_french.rds"))
fama_french_tbl <- fama_french$data$fama_french_tbl
# 2.0 All industries ----------------------------------------------------------
# 2.1 Market return  ---------------------------------------------------------------
# fama_french_tbl <-
#   fama_french_tbl %>%
#   mutate(Mkt = `Mkt-RF` + RF)
# 2.2 CSAD and CSSD --------------------------------------------------------------------
results_all_industries_tbl <- cross_deviations_tbl(data = equal_returns_tbl)
# 2.3 Graphing ---------------------------------------------------------------
results_all_industries_gg <-
results_all_industries_tbl %>%
results_gg() +
labs(title = "All industries")
results_all_industries_tbl
equal_returns_tbl
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.)))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(across(.fns = ~ cross_deviations_tbl(.)))
csad <-
function (data, market_return) {
rowSums(abs(data - as.numeric(market_return)), na.rm = TRUE) / nrow(data)
}
cssd <-
function (data, market_return) {
sqrt(rowSums((data - as.numeric(market_return)) ^ 2, na.rm = TRUE) / nrow(data - 1))
}
cross_deviations_tbl <-
function(data){
# Market return
market_return_matrix <-
rowMeans(data, na.rm = TRUE )
# CSAD and CSSD
csad_matrix <- csad(data = data,
market_return = market_return_matrix)
# cssd_matrix <- cssd(data = data[, -1],
#                     market_return = market_return_matrix)
# Combined_results
results_tbl <-
bind_cols(
data %>% dplyr::select(Date),
market_return_matrix,
csad_matrix,
# cssd_matrix
) %>%
rename("Mkt" = ...2,
"CSAD" = ...3,
# "CSSD" = ...4
)
# Result
results_tbl
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.)))
cross_deviations_tbl <-
function(data){
# Market return
market_return_matrix <-
rowMeans(data[, -1], na.rm = TRUE )
# CSAD and CSSD
csad_matrix <- csad(data = data,
market_return = market_return_matrix)
# cssd_matrix <- cssd(data = data[, -1],
#                     market_return = market_return_matrix)
# Combined_results
results_tbl <-
bind_cols(
data %>% dplyr::select(Date),
market_return_matrix,
csad_matrix,
# cssd_matrix
) %>%
rename("Mkt" = ...2,
"CSAD" = ...3,
# "CSSD" = ...4
)
# Result
results_tbl
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.)))
market_return_matrix <-
rowMeans(data[, -1], na.rm = TRUE )
equal_returns_tbl %>%
mutate('Market Return' = market_return_matrix(equal_returns_tbl[, -1]))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate('Market Return' = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE)
cross_deviations_tbl <-
function(data){
# CSAD and CSSD
csad_matrix <- csad(data = data,
market_return = market_return)
# cssd_matrix <- cssd(data = data[, -1],
#                     market_return = market_return_matrix)
# # Combined_results
# results_tbl <-
#   bind_cols(
#     data %>% dplyr::select(Date),
#     market_return_matrix,
#     csad_matrix,
#     # cssd_matrix
#   ) %>%
#   rename("Mkt" = ...2,
#          "CSAD" = ...3,
#          # "CSSD" = ...4
#   )
#
# # Result
# results_tbl
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = {.col}_{.fns}))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "{.col}_{.fns}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "{.col}_{.fn}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "{.col}_{.fns}"))
rlang::last_trace()
?across
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "csad_{.col}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(., market_return), .names = "csad_{.col}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "csad_{.col}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE)
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
dplyr:select(market_return)
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
dplyr::select(market_return)
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
dplyr::select(market_return) %>%
fx_plot()
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = TRUE) %>%
dplyr::select(Date, market_return) %>%
fx_plot()
equal_returns_tbl
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1]), na.rm = FALSE) %>%
dplyr::select(Date, market_return) %>%
fx_plot()
fx_plot()
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
dplyr::select(Date, market_return) %>%
fx_plot()
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "csad_{.col}"))
cross_deviations_tbl <-
function(data, market_return = market_return){
# CSAD and CSSD
csad_matrix <- csad(data = data,
market_return = market_return)
# cssd_matrix <- cssd(data = data[, -1],
#                     market_return = market_return_matrix)
# # Combined_results
# results_tbl <-
#   bind_cols(
#     data %>% dplyr::select(Date),
#     market_return_matrix,
#     csad_matrix,
#     # cssd_matrix
#   ) %>%
#   rename("Mkt" = ...2,
#          "CSAD" = ...3,
#          # "CSSD" = ...4
#   )
#
# # Result
# results_tbl
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
mutate(across(-Date, .fns = ~ cross_deviations_tbl(.), .names = "csad_{.col}"))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE))
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
mutate(across(-Date, .fns = ~ csad(.), .names = "csad_{.col}"))
csad <-
function (data, market_return = market_return) {
rowSums(abs(data - as.numeric(market_return)), na.rm = TRUE) / nrow(data)
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
mutate(across(-Date, .fns = ~ csad(.), .names = "csad_{.col}"))
csad <-
function (data, market_return = market_return) {
as_tibble(rowSums(abs(data - as.numeric(market_return)), na.rm = TRUE) / nrow(data))
}
# Cleaning -----------------------------------------------------------------
equal_returns_tbl %>%
mutate(market_return = rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)) %>%
mutate(across(-Date, .fns = ~ csad(.), .names = "csad_{.col}"))
# Cleaning -----------------------------------------------------------------
market_return <-  rowMeans(equal_returns_tbl[, -1], na.rm = TRUE)
csad(equal_returns_tbl[, 2], market_return = market_return)
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(.), .names = "csad_{.col}"))
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(., market_return = market_return), .names = "csad_{.col}"))
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(equal_returns_tbl[, -1], market_return = market_return), .names = "csad_{.col}"))
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(equal_returns_tbl[, -1], market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with(csad), market_return)
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(equal_returns_tbl[, -1], market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with("csad"), market_return)
csad <-
function (data, market_return = market_return) {
as_tibble(rowSums(abs(data[, -1] - as.numeric(market_return)), na.rm = TRUE) / nrow(data))
}
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(., market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with("csad"), market_return)
as_tibble(rowSums(abs(data - as.numeric(market_return)), na.rm = TRUE) / nrow(data))
csad <-
function (data, market_return = market_return) {
as_tibble(rowSums(abs(data - as.numeric(market_return)), na.rm = TRUE) / nrow(data))
}
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(-Date, .fns = ~ csad(. %>% dplyr::select(-Date), market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with("csad"), market_return)
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
dplyr::select(-Date) %>%
mutate(across(.fns = ~ csad(., market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with("csad"), market_return)
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
dplyr::select(-Date) %>%
mutate(across(.fns = ~ csad(.x, market_return = market_return), .names = "csad_{.col}")) %>%
dplyr::select(Date, starts_with("csad"), market_return)
equal_returns_tbl %>%
mutate(market_return = market_return) %>%
mutate(across(.col = -Date, .fns = ~ csad(.x, market_return = market_return), .names = "csad_{.col}"))
dplyr::select(Date, starts_with("csad"), market_return)
equal_returns_tbl %>%
mutate(across(.col = -Date, .fns = ~ csad(.x, market_return = market_return), .names = "csad_{.col}"))
csad(equal_returns_tbl[, 2], market_return = market_return)
equal_returns_tbl %>%
mutate(across(.col = -Date, .fns = ~rowSums(abs(.x - as.numeric(market_return)), na.rm = TRUE) / nrow(.x), .names = "csad_{.col}"))
source("~/Papers/1929_herding_draft/Scripts/03_descriptives.R", echo=TRUE)
