"t-statistic a1" = "t-statistic:gamma[1]",
"t-statistic a2" = "t-statistic:gamma[2]"
))
}
# Graphing ---------------------------------------------------------------
CSAD_model_rol_gg <-
models_rol %>%
fx_recode_pred() %>%
fx_recode_plot(variables_color = 6)
fx_recode_prep <- function(data){
data %>%
pivot_longer(c(-Date, -Category), names_to = "Series", values_to = "Value") %>%
mutate(Series = dplyr::recode(
Series,
"a0" = "gamma[0]",
"a1" = "gamma[1]",
"a2" = "gamma[2]",
"t-statistic a0" = "t-statistic:gamma[0]",
"t-statistic a1" = "t-statistic:gamma[1]",
"t-statistic a2" = "t-statistic:gamma[2]"
))
}
# Graphing ---------------------------------------------------------------
CSAD_model_rol_gg <-
models_rol %>%
fx_recode_pred() %>%
fx_recode_plot(variables_color = 6)
fx_recode_prep <- function(data){
data %>%
pivot_longer(c(-Date, -Category), names_to = "Series", values_to = "Value") %>%
mutate(Series = dplyr::recode(
Series,
"a0" = "gamma[0]",
"a1" = "gamma[1]",
"a2" = "gamma[2]",
"t-statistic a0" = "t-statistic:gamma[0]",
"t-statistic a1" = "t-statistic:gamma[1]",
"t-statistic a2" = "t-statistic:gamma[2]"
))
}
# Graphing ---------------------------------------------------------------
CSAD_model_rol_gg <-
models_rol %>%
fx_recode_prep() %>%
fx_recode_plot(variables_color = 6)
CSAD_model_rol_gg
dump(list(nest_prep = nest_prep), file = "group_ols_functions.R")
?dump
dump("nest_prep", file = "group_ols_functions.R")
dump("nest_prep", file = here("Functions", "group_ols_functions.R"))
dump(c("nest_prep", "ols_tidy_group_models", "ols_pretty_results"),  file = here("Functions", "group_ols_functions.R"))
dump(c("nest_prep", "qmodel_tidy_group_models", "qmodels_pretty_results"),  file = here("Functions", "group_qr_functions.R"))
dump(c("nest_prep","tau_mapper", "qmodel_tidy_group_models", "qmodels_pretty_results"),  file = here("Functions", "group_qr_functions.R"))
fx_recode_plot <-
function (data, plotname = " ", variables_color = 12, ncol = NULL, nrow = NULL) {
ggplot(
data,
aes(x = Date, y = Value, color = Category, group = Category)
) +
geom_line() +
facet_wrap (. ~ Series, scale = "free", labeller = label_parsed, ncol, nrow) +
theme_bw() +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme(
text = element_text(size = 8),
strip.background = element_rect(colour = "white", fill = "white"),
axis.text.x = element_text(angle = 90),
axis.title = element_text(size = 8),
plot.tag = element_text(size = 8),
legend.position = "bottom"
) +
labs(x = "", y = plotname, color = NULL) +
scale_color_manual(values = pnw_palette("Cascades", variables_color))
}
fx_recode_plot <-
function (data, plotname = " ", variables_color = 12, col_pallet = "Cascades",  ncol = NULL, nrow = NULL) {
ggplot(
data,
aes(x = Date, y = Value, color = Category, group = Category)
) +
geom_line() +
facet_wrap (. ~ Series, scale = "free", labeller = label_parsed, ncol, nrow) +
theme_bw() +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
theme(
text = element_text(size = 8),
strip.background = element_rect(colour = "white", fill = "white"),
axis.text.x = element_text(angle = 90),
axis.title = element_text(size = 8),
plot.tag = element_text(size = 8),
legend.position = "bottom"
) +
labs(x = "", y = plotname, color = NULL) +
scale_color_manual(values = pnw_palette(col_pallet, variables_color))
}
# Graphing ---------------------------------------------------------------
CSAD_model_rol_gg <-
models_rol %>%
fx_recode_prep() %>%
fx_recode_plot(variables_color = 6)
CSAD_model_rol_gg
dump(c("nest_prep", "ols_tidy_group_models", "ols_pretty_results"),  file = here("Functions", "group_ols_functions.R"))
dump(c("nest_prep","tau_mapper", "qmodel_tidy_group_models", "qmodels_pretty_results"),  file = here("Functions", "group_qr_functions.R"))
dump(c("ols_slidify_models", "unnest_rol_col", "fx_recode_prep", "fx_recode_plot"),  file = here("Functions", "group_ols_slidify_functions.R"))
slidyfy_gg_workflow <- function(data_model_rol){
data_model_rol %>%
fx_recode_prep() %>%
fx_recode_plot(variables_color = 6)
}
dump(c("nest_prep", "ols_tidy_group_models", "ols_pretty_results", "ols_group_workflow"),  file = here("Functions", "group_ols_functions.R"))
dump(c("nest_prep","tau_mapper", "qmodel_tidy_group_models", "qmodels_pretty_results", "qmodels_group_workflow"),
file = here("Functions", "group_qr_functions.R"))
dump(c("ols_slidify_models", "unnest_rol_col", "fx_recode_prep", "fx_recode_plot", "slidyfy_gg_workflow"),
file = here("Functions", "group_ols_slidify_functions.R"))
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions"))
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
dump(c("nest_prep", "ols_tidy_group_models", "ols_pretty_results", "ols_group_workflow"),  file = here("Functions", "group_ols_functions.R"))
dump(c("nest_prep","tau_mapper", "qmodel_tidy_group_models", "qmodels_pretty_results", "qmodels_group_workflow"),
file = here("Functions", "group_qr_functions.R"))
dump(c("ols_slidify_models", "unnest_rol_col", "fx_recode_prep", "fx_recode_plot", "slidyfy_gg_workflow"),
file = here("Functions", "group_ols_slidify_functions.R"))
source("~/Papers/1929_herding_draft/Scripts/general_herding_analysis.R")
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_resuls_tbl <- result_csad_cssd$combined_results_tbl
# Description
# General herding analysis by Xolani Sibande - 23 Septermber 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
library(quantreg)
options(scipen = 999)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
ols_tbl
## QR --------------------------------------------------------------------
qr_tbl <-
combined_results_tbl %>%
qmodels_group_workflow()
source("~/Papers/1929_herding_draft/Scripts/general_herding_analysis.R")
source("~/Papers/1929_herding_draft/Scripts/general_herding_analysis.R")
rol_gg
#| label: setup
#| include: false
options(scipen=999)
knitr::opts_chunk$set(
fig.pos = "H",
fig.env= 'figure',
ft.align = "left",
ft.tabcolsep= 0,
ft.latex.float = "none",
ft.arraystretch = 0.6
)
library(tidyverse)
library(readr)
library(readxl)
library(zoo)
library(magick)
library(stringi)
library(patchwork)
library(xtable)
library(scales)
library(rvest)
library(rebus)
library(PNWColors)
library(lubridate)
library(here)
library(flextable)
library(gt)
library(officer)
library(officedown)
library(modelsummary)
library(sandwich)
library(lmtest)
library(stargazer)
general_herding <- read_rds(here("Outputs", "artifacts_general_herding.rds"))
general_herding
#| label: tbl-ols
#| tbl-cap: "General herding ols regression"
equation <-  as_equation(c("CSAD_{t} = \\alpha + \\gamma_1|R_{m, t}| +  \\gamma_2R_{m, t}^2 +  \\epsilon_{t}"))
estimates <- c(
"\\alpha",
"\\gamma_1 ",
"\\gamma_2"
)
general_herding <- read_rds(here("Outputs", "artifacts_general_herding.rds"))
general_herding$models$ols_tbl %>%
add_column(.data = tibble(rep(" ", 6))) %>%
relocate(`rep(" ", 6)`, .after = Category) %>%
rename(" " = `rep(" ", 6)`) %>%
as_grouped_data(groups = c("Category")) %>%
as_flextable(hide_grouplabel = TRUE) %>%
autofit(add_w = 1) %>%
mk_par(i =, j = c(2, 3, 4), part = "header", value = as_paragraph(as_equation(estimates))) %>%
add_footer_row(values = as_paragraph("Note: The numbers in brackets are p-values. A p-value of less than 0.1 is significant", " ", ". The regressions are based on ", equation), colwidths = 4) %>%
hline_bottom(part = "footer", border = fp_border(color = "black", style = "solid", width = 1))
#| label: tbl-general_quantiles
#| tbl-cap: General herding quantile regressions
general_herding$models$qr_tbl %>%
as_grouped_data(groups = c("Category")) %>%
as_flextable(hide_grouplabel = TRUE) %>%
autofit(add_w = 1) %>%
set_header_labels(
tau = " "
) %>%
mk_par(i =, j = c(2, 3, 4), part = "header", value = as_paragraph(as_equation(estimates))) %>%
add_footer_row(values = as_paragraph("Note: The numbers in brackets are p-values. A p-value of less than 0.1 is significant", " ", ". The regressions are based on ", equation), colwidths = 4) %>%
hline_bottom(part = "footer", border = fp_border(color = "black", style = "solid", width = 1))
#| label: fig-rol
#| fig-cap: "CSAD rolling regressions with 250 day window"
#| fig-height: 6
#| fig-width: 8
#| cache: true
CSAD_model_rol_gg <- general_herding$graphs$rol_gg
CSAD_model_rol_gg
# Description
# Analysis on crisis periods - Xolani Sibande 7 June 2023
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
library(quantmod)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
combined_results_tbl
# Regressions ---------------------------------------------------------------
formula <- as.formula(CSAD ~
dummy_gfc*abs(`Market Return`) +
(1-dummy_gfc)*abs(`Market Return`) +
dummy_gfc*I(`Market Return` ^ 2) +
(1-dummy_gfc)*I(`Market Return` ^ 2)
)
formula
summary(combined_results_tbl)
?seq
dummy_gfc <- tbl(
Date  = seq(from = as.Date("01-07-1926"), to = as.Date("29-07-2022"), by = "day")
)
dummy_gfc <- tibble(
Date  = seq(from = as.Date("01-07-1926"), to = as.Date("29-07-2022"), by = "day")
)
dummy_gfc
?as.Date
dummy_gfc <- tibble(
Date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day")
)
dummy_gfc
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = if_else(date < start_gfc, 0,
if_else(date => start_gfc, 1,
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = if_else(date < start_gfc, 0,
if_else(date >= start_gfc, 1,
if_else(date > end_gfc, 0, date)))
)
## Financial Crisis --------------------------------------------------------
# From Wikipedia
start_gfc <- "01-01-2007"
end_gfc <- "31-12-2008"
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = if_else(date < start_gfc, 0,
if_else(date >= start_gfc, 1,
if_else(date > end_gfc, 0, date)))
)
## Financial Crisis --------------------------------------------------------
# From Wikipedia
start_gfc <- as.Date("2007-01-01")
end_gfc <- as.Date("2008-12-31")
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = if_else(date < start_gfc, 0,
if_else(date >= start_gfc, 1,
if_else(date > end_gfc, 0, date)))
)
start_gfc
end_gfc
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = ifelse(date < start_gfc, 0,
ifelse(date >= start_gfc, 1,
ifelse(date > end_gfc, 0, date)))
)
dummy_tbl
dummy_crisis <- function(data_date, start_date, end_date){
dummy_gfc = ifelse(data_date < start_date, 0,
ifelse(date >= start_date, 1,
ifelse(date > end_date, 0, date)
))
}
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = dummy_crisis(data_date = date,
start_date = start_gfc,
end_date = end_gfc)))
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = dummy_crisis(data_date = date,
start_date = start_gfc,
end_date = end_gfc)
)
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day")
# dummy_gfc = dummy_crisis(data_date = date,
#                          start_date = start_gfc,
#                          end_date = end_gfc)
)
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc )
## Financial Crisis --------------------------------------------------------
# From Wikipedia
start_gfc <- as.Date("2006-12-31")
end_gfc <- as.Date("2008-12-31")
dummy_crisis <- function(data_date, start_date, end_date){
dummy_gfc = ifelse(data_date < start_date, 0,
ifelse(date > start_date, 1,
ifelse(date > end_date, 0, date)
))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc )
dummy_crisis <- function(data_date, start_date, end_date){
dummy_gfc = ifelse(data_date < start_date, 0,
ifelse(date > start_date, 1,
ifelse(date > end_date, 0, date)
))
}
dummy_tbl
start_gfc
end_gfc
dummy_crisis <- function(data_date, start_date, end_date){
dummy_gfc = ifelse(data_date < start_date, 0,
ifelse(date > start_date, 1,
ifelse(date > end_date, 0, date
)))
}
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(date > start_date, 1,
ifelse(date > end_date, 0, date
)))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0, 1)
# ifelse(date > start_date, 1,
#        ifelse(date > end_date, 0, date
#               )))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(date > start_date, 1,date))
#        ifelse(date > end_date, 0, date
#               )))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date, 1,
ifelse(data_date > end_date, 0, date
)))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date, 1,
ifelse(data_date > end_date, 0, date
)))
}
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date, 1,
ifelse(data_date > end_date, 0, date
)))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
end_gfc <- as.Date("2008-12-31")
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date, 1,
ifelse(data_date > end_date, 0, data_date
)))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_tbl <- tibble(
date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = dummy_crisis(data_date = date,
start_date = start_gfc,
end_date = end_gfc)
)
dummy_tbl
combined_results_tbl
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date, 1,
ifelse(data_date > end_date, 0, data_date
)))
}
dummy_crisis(data_date = dummy_tbl$date, start_date = start_gfc, end_date = end_gfc)
dummy_tbl <- tibble(
Date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = dummy_crisis(data_date = Date,
start_date = start_gfc,
end_date = end_gfc)
)
dummy_tbl
dummy_tbl %>% skim()
dummy_tbl %>% summary()
dummy_tbl %>% fx_plot()
# Functions ---------------------------------------------------------------
source(here("Functions", "fx_plot.R"))
dummy_tbl %>% fx_plot()
dummy_crisis <- function(data_date, start_date, end_date){
ifelse(data_date < start_date, 0,
ifelse(data_date > start_date & data_date < end_date , 1,
ifelse(data_date > end_date, 0, data_date
)))
}
dummy_tbl <- tibble(
Date  = seq(from = as.Date("1926-07-01"), to = as.Date("2022-07-29"), by = "day"),
dummy_gfc = dummy_crisis(data_date = Date,
start_date = start_gfc,
end_date = end_gfc)
)
dummy_tbl %>% fx_plot()
dummy_tbl %>% fx_plot()
