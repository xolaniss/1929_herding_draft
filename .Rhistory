source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_crisis()
source(here("Functions", "group_ols_slidify_functions.R"))
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard()
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
source(here("Functions", "group_ols_slidify_functions.R"))
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
rolling_reg_spec <-
slidify(
.f =  ~coeftest(lm(..1 ~ ..2 + ..3)),
.period = window,
.align = "right",
.unlist = FALSE,
.partial = FALSE
)
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis"))
models_rol
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis")) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis")) %>%
mutate(models = map(~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis")) %>%
mutate(models = map(., ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis")) %>%
mutate(models = map(data, ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
window = 250
rolling_reg_spec <-
slidify(
.f =  ~coeftest(lm(..1 ~ ..2 + ..3)),
.period = window,
.align = "right",
.unlist = FALSE,
.partial = FALSE
)
models_rol <-
combined_results_tbl %>%
nest(.by = c("Category", "Crisis")) %>%
mutate(models = map(data, ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
?slidify
models_rol <-
combined_results_tbl %>%
group_by("Category", "Crisis") %>%
mutate(models = map(data, ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = map(data, ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = map(., ~rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2))))
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
combined_results_tbl %>%
group_by(Category, Crisis)
models_rol <-
combined_results_tbl %>%
group_by(Category, Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol <-
combined_results_tbl %>%
group_by(Category) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol
models_rol <-
combined_results_tbl %>%
group_by(Crisis) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol
models_rol %>%
unnest_rol_col_standard()
models_rol %>%
unnest_rol_col_standard(models)
models_rol <-
combined_results_tbl %>%
mutate(Group = paste(Category, "-", Crisis)) %>%
dplyr::select(-Category, -Crisis) %>%
group_by(Group) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol <-
combined_results_tbl %>%
mutate(Group = paste(Category, "-", Crisis)) %>%
dplyr::select(-Category, -Crisis)
models_rol
models_rol <-
combined_results_tbl %>%
mutate(Group = paste(Category, "-", Crisis)) %>%
dplyr::select(-Category, -Crisis) %>%
group_by(Group)
models_rol
models_rol <-
combined_results_tbl %>%
mutate(Group = paste(Category, "-", Crisis)) %>%
dplyr::select(-Category, -Crisis) %>%
group_by(Group) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
combined_results_tb
combined_results_tbl
models_rol <-
combined_results_tbl %>%
group_by(Category) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol %>%
unnest_rol_col_standard(models)
models_rol <-
combined_results_tbl %>%
# group_by(Category) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol %>%
unnest_rol_col_standard(models)
# Description
# General herding analysis by Xolani Sibande - 23 Septermber 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
library(quantreg)
options(scipen = 999)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
window = 250
rolling_reg_spec <-
slidify(
.f =  ~coeftest(lm(..1 ~ ..2 + ..3)),
.period = window,
.align = "right",
.unlist = FALSE,
.partial = FALSE
)
models_rol <-
combined_results_tbl %>%
group_by(Category) %>%
mutate(models = rolling_reg_spec(CSAD, abs(`Market Return`), I(`Market Return` ^ 2)))
models_rol
models_rol %>%
mutate(tidy = map(models, ~broom::tidy))
models_rol %>%
mutate(tidy = map(models, ~broom::tidy)) %>%
unnest(tidy)
models_rol %>%
mutate(tidy = map(models, ~broom::tidy)) %>%
unnest(cols = tidy)
models_rol %>%
mutate(tidy = map(models, broom::tidy)) %>%
unnest(cols = tidy)
models_rol %>%
mutate(tidy = map(models, broom::tidy)) %>%
unnest(cols = tidy) %>%
dplyr::select(Date, Category, Crisis, term:estimate, statistic) %>%
drop_na()
models_rol %>%
mutate(tidy = map(models, broom::tidy)) %>%
unnest(cols = tidy) %>%
dplyr::select(Date, Category, Crisis, term:estimate, statistic) %>%
drop_na() %>%
pivot_wider(names_from = term, values_from = c(estimate, statistic))
models_rol %>%
mutate(tidy = map(models, broom::tidy)) %>%
unnest(cols = tidy) %>%
dplyr::select(Date, Category, Crisis, term:estimate, statistic) %>%
drop_na() %>%
pivot_wider(names_from = term, values_from = c(estimate, statistic)) %>%
dplyr::rename("a0" = `estimate_(Intercept)`,
"a1" = `estimate_..2`,
"a2" = `estimate_..3`,
"t-statistic a0" = `statistic_(Intercept)`,
"t-statistic a1" = `statistic_..2`,
"t-statistic a2" = `statistic_..3`)
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard() %>%
unnest_rol_col_standard()
# Description
# General herding analysis by Xolani Sibande - 23 Septermber 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
library(quantreg)
options(scipen = 999)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard() %>%
unnest_rol_col_standard()
# ## QR --------------------------------------------------------------------
# qr_tbl <-
#   combined_results_tbl %>%
#   qmodels_group_workflow()
#
#  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard()
models_rol
##  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard() %>%
unnest_rol_col_standard
models_rol
##  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard()
models_rol
# Description
# General herding analysis by Xolani Sibande - 23 Septermber 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
library(quantreg)
options(scipen = 999)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
##  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard() %>%
unnest_rol_col_standard(rol_column = models)
# Description
# General herding analysis by Xolani Sibande - 23 Septermber 2022
# Preliminaries -----------------------------------------------------------
# core
library(tidyverse)
library(readr)
library(readxl)
library(here)
library(lubridate)
library(xts)
library(broom)
library(glue)
library(scales)
library(kableExtra)
library(pins)
library(timetk)
library(uniqtag)
# graphs
library(PNWColors)
library(patchwork)
# eda
library(psych)
library(DataExplorer)
library(skimr)
# econometrics
library(tseries)
library(strucchange)
library(vars)
library(urca)
library(mFilter)
library(car)
library(quantreg)
options(scipen = 999)
# Functions ---------------------------------------------------------------
source(here("Functions", "group_ols_functions.R"))
source(here("Functions", "group_qr_functions.R"))
source(here("Functions", "group_ols_slidify_functions.R"))
# Import -------------------------------------------------------------
result_csad_cssd <- read_rds(here("Outputs", "artifacts_descriptives.rds"))
combined_results_tbl <- result_csad_cssd$combined_results_tbl
# Regressions ------------------------------------------------------
## OLS -------------------------------------------------------------------
formula <-  as.formula(CSAD ~ abs(`Market Return`) + I(`Market Return` ^ 2))
ols_tbl <-
combined_results_tbl %>%
ols_group_workflow()
##  Rolling regressions ----------------------------------------------------
models_rol <-
combined_results_tbl %>%
ols_slidify_models_standard() %>%
unnest_rol_col_standard(rol_column = models)
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
source(here("Functions", "group_ols_slidify_functions.R"))
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
## Graphing ---------------------------------------------------------------
rol_gg <-
models_rol %>%
slidyfy_gg_workflow_standard()
rol_gg
